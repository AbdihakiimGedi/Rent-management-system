"""Fix FK to renter_input_fields

Revision ID: 566ac60ef60a
Revises: b782889467b4
Create Date: 2025-08-17 10:23:33.770502

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '566ac60ef60a'
down_revision = 'b782889467b4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('owner_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Pending', 'Approved', 'Rejected'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.Column('requirements_data', mysql.LONGTEXT(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_restrictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('complaints_count', sa.Integer(), nullable=True),
    sa.Column('warning_count', sa.Integer(), nullable=True),
    sa.Column('restricted', sa.Boolean(), nullable=True),
    sa.Column('blocked_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('renter_input_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rental_item_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.String(length=50), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rental_item_id'], ['rental_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('complainant_id', sa.Integer(), nullable=False),
    sa.Column('defendant_id', sa.Integer(), nullable=False),
    sa.Column('complaint_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['complainant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['defendant_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('rental_input_fields')
    with op.batch_alter_table('booking_input_answers', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('booking_input_answers_ibfk_2'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'renter_input_fields', ['input_field_id'], ['id'])

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('requirements_data', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('service_fee', sa.Numeric(precision=12, scale=2), nullable=True))
        batch_op.add_column(sa.Column('payment_account', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('released_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('penalty_applied', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('owner_rating_penalty', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('delivered_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('renter_confirmed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('owner_confirmed', sa.Boolean(), nullable=True))
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('payment_status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('payment_amount',
               existing_type=mysql.FLOAT(),
               type_=sa.Numeric(precision=12, scale=2),
               nullable=False)
        batch_op.alter_column('payment_method',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.create_foreign_key(None, 'users', ['owner_id'], ['id'])
        batch_op.drop_column('contract_accepted_at')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.drop_column('is_active')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('category_requirements', schema=None) as batch_op:
        batch_op.add_column(sa.Column('field_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('required', sa.Boolean(), nullable=True))
        batch_op.alter_column('field_type',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.Enum('string', 'number', 'date', 'file', 'selection'),
               existing_nullable=False)
        batch_op.alter_column('options',
               existing_type=mysql.VARCHAR(length=500),
               type_=sa.Text(),
               nullable=True)
        batch_op.drop_column('name')
        batch_op.drop_column('placeholder')
        batch_op.drop_column('max_images')
        batch_op.drop_column('is_required')

    with op.batch_alter_table('rental_deliveries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('code_expiry', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('owner_proof', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('delivered_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.drop_column('renter_confirmed_at')
        batch_op.drop_column('code_expires_at')
        batch_op.drop_column('fallback_proof')
        batch_op.drop_column('owner_confirmed_at')

    with op.batch_alter_table('rental_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=150), nullable=False))
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('dynamic_data', sa.Text(), nullable=False))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.drop_column('is_available')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=128), nullable=False))
        batch_op.add_column(sa.Column('is_restricted', sa.Boolean(), nullable=False))
        batch_op.alter_column('role',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
        batch_op.drop_column('password')
        batch_op.drop_column('created_at')
        batch_op.drop_column('address')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('birthdate')
        batch_op.drop_column('full_name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', mysql.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('birthdate', sa.DATE(), nullable=False))
        batch_op.add_column(sa.Column('phone_number', mysql.VARCHAR(length=9), nullable=False))
        batch_op.add_column(sa.Column('address', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('password', mysql.VARCHAR(length=200), nullable=False))
        batch_op.alter_column('is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
        batch_op.alter_column('role',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_column('is_restricted')
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('rental_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_available', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.drop_column('dynamic_data')
        batch_op.drop_column('description')
        batch_op.drop_column('name')

    with op.batch_alter_table('rental_deliveries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_confirmed_at', mysql.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('fallback_proof', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('code_expires_at', mysql.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('renter_confirmed_at', mysql.DATETIME(), nullable=True))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.drop_column('delivered_at')
        batch_op.drop_column('owner_proof')
        batch_op.drop_column('code_expiry')

    with op.batch_alter_table('category_requirements', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_required', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('max_images', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('placeholder', mysql.VARCHAR(length=255), nullable=False))
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(length=100), nullable=False))
        batch_op.alter_column('options',
               existing_type=sa.Text(),
               type_=mysql.VARCHAR(length=500),
               nullable=False)
        batch_op.alter_column('field_type',
               existing_type=sa.Enum('string', 'number', 'date', 'file', 'selection'),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('required')
        batch_op.drop_column('field_name')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False))
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contract_accepted_at', mysql.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('payment_method',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('payment_amount',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('payment_status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('owner_confirmed')
        batch_op.drop_column('renter_confirmed')
        batch_op.drop_column('delivered_at')
        batch_op.drop_column('owner_rating_penalty')
        batch_op.drop_column('penalty_applied')
        batch_op.drop_column('released_at')
        batch_op.drop_column('payment_account')
        batch_op.drop_column('service_fee')
        batch_op.drop_column('requirements_data')
        batch_op.drop_column('owner_id')

    with op.batch_alter_table('booking_input_answers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('booking_input_answers_ibfk_2'), 'rental_input_fields', ['input_field_id'], ['id'])

    op.create_table('rental_input_fields',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('rental_item_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('label', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('field_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('is_required', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('field_key', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('is_financial', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('extra_config', mysql.LONGTEXT(charset='utf8mb4', collation='utf8mb4_bin'), nullable=True),
    sa.ForeignKeyConstraint(['rental_item_id'], ['rental_items.id'], name=op.f('rental_input_fields_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('complaints')
    op.drop_table('renter_input_fields')
    op.drop_table('user_restrictions')
    op.drop_table('owner_requests')
    op.drop_table('notifications')
    # ### end Alembic commands ###
